

.iro-positions-roll.max-width

  - p = @position
  .gameuiW.show-amounts{ data: { cc: { strike: p.strike, startPrice: p.opened_price, currentPrice: p.current_price, cus: p.strategy.current_underlying_strike } } }
    .gameui
      .gameuiC
        = link_to '[roll]', roll_iro_position_path(p)

        .elephantW
          .elephant
            .elephantC

              .amount

              .q= p.quantity

              .riderW
                .rider
                  .riderC

              .riderStart
                .amount
                .riderCurrent
                  .amount

              .riderStart2
                .amount
                .riderCurrent2
                  .amount


            .sunflowerW
              .sunflower
                .sunflowerC

                  .days-left= (p.expires_on.to_date - Time.now.to_date).to_i

        .windW
          .wind
            .c-u-s= pp_currency p.strategy.current_underlying_strike
            .windC


        .spearW
          .spear
            .spearC
              .spearStart
                .spearCurrent
  .c

  -# next position
  - @next_positions.each do |p|
    - gainp = p.strike / @position.strike - 1
    .gameuiW.next-position.show-amounts{ data: { cc: { gainp: gainp, strike: p.strike, startPrice: p.current_price, currentPrice: @position.current_price, cus: p.strategy.current_underlying_strike } } }
      .gameui
        .gameuiC
          = link_to '[roll]', roll_iro_position_path(p)

          .elephantW

            .elephant
              .elephantLoss
              .elephantC

                .amount

                .q= p.quantity

                .riderW
                  .rider
                    .riderC

                .riderStart
                  .amount
                  .riderCurrent
                    .amount

                .riderStart2
                  .amount
                  .riderCurrent2
                    .amount


              .sunflowerW
                .sunflower
                  .sunflowerC

                    .days-left= (p.expires_on.to_date - Time.now.to_date).to_i

          .windW
            .wind
              .c-u-s= pp_currency p.strategy.current_underlying_strike
              .windC


          .spearW
            .spear
              .spearC
                .spearStart
                  .spearCurrent
  .c


